$colors: (
  (#bdd9fe #217efd),
  (#ffb5364a #ffb536),
  (#f4cefa #db5aee),
  (#fbd1c9 #f3654a),
  (#c5d1df #384455),
  (#dccefb #895bf1),
  (#27ae604a #27ae60),
  (#56ccf24a #56ccf2)
);

@mixin defautlTag {
  border-radius: 10px;
  padding: 11px 10px;
  display: flex;
  justify-content: center;
  align-items: center;
}

:host {
  display: block;
  margin: 16px 0;

  table {
    width: 100%;
    thead {
      th {
        font-size: 16px;
        line-height: 19px;
        font-weight: 500;
        color: var(--text-2);
        padding: 8px 20px;

        &:first-child div {
          justify-content: center;
        }

        div {
          width: 100%;
          display: flex;
          justify-content: space-between;
          align-items: center;

          span.sortable-icons {
            display: flex;
            flex-direction: column;
            cursor: pointer;

            ng-icon:first-child {
              margin-bottom: -5px;
            }

            ng-icon:last-child {
              margin-top: -5px;
            }
          }
        }
      }
    }
    tbody {
      td {
        padding: 8px 20px;
        text-align: left;

        & > div {
          &.success,
          &.warning,
          &.error {
            @include defautlTag();
          }

          &.success {
            color: #12a474;
            background-color: #bbf3e0;
          }

          &.warning {
            color: #f2994a;
            background-color: #fff3db;
          }

          &.error {
            color: #eb5757;
            background-color: #ffdbdb;
          }
        }
      }

      @for $i from 0 through 1000 {
        tr:nth-child(#{$i}) {
          td.id {
            div {
              @include defautlTag();
              $key: random(length($colors));
              background-color: nth(nth($colors, $key), 1);
              color: nth(nth($colors, $key), 2);
            }
          }
        }
      }
    }
  }
}
